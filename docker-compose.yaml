version: "3"

services:
  db:
    image: postgres:12.2-alpine
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${DATABASE_NAME}
    volumes:
      - ./pgdata:/var/lib/postgresql/data
      #- ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - my_network

  pgadmin:
    image: dpage/pgadmin4:latest
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - "8080:80"
    depends_on:
      - db
    networks:
      - my_network
    
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    env_file: ./backend/.env
    environment:
      - APP_ENV=${APP_ENV}
    depends_on:
      - db
    #command: bash -c "cd databases && python create_db.py && alembic revision --autogenerate -m 'init' && alembic upgrade head && cd .. && python main.py"
    command: bash -c "python main.py"
    ports:
      - "8000:8000"
    networks:
      - my_network
        

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    networks:
      - my_network

networks:
  my_network:
    driver: bridge